{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing music playback state, including retrieving current state, playing, pausing, and skipping tracks. It uses FastAPI router, Pydantic models for data validation, and dependencies for user authentication.", "external_files": ["../storage/memory", "./users"], "external_methods": ["playback_state.get", "playback_state.__setitem__", "db_tracks", "get_current_user"], "published": [], "classes": [{"name": "PlaybackState", "description": "Represents the playback state, including whether music is playing, the current track ID, and the playback position in milliseconds."}], "methods": [{"name": "_ensure_track(track_id: Optional[str])", "description": "Checks if a given track ID exists in the database; raises HTTP 404 error if not found.", "scope": "", "scopeKind": ""}, {"name": "get_state(user: UserPublic = Depends(get_current_user))", "description": "Retrieves the current playback state for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "play(track_id: Optional[str] = None, user: UserPublic = Depends(get_current_user))", "description": "Starts or resumes playback, optionally switching to a specified track.", "scope": "", "scopeKind": ""}, {"name": "pause(user: UserPublic = Depends(get_current_user))", "description": "Pauses the current playback.", "scope": "", "scopeKind": ""}, {"name": "skip(track_id: str, user: UserPublic = Depends(get_current_user))", "description": "Skips to a specified track by ID and starts playback.", "scope": "", "scopeKind": ""}], "calls": ["Depends(get_current_user)", "playback_state.get", "playback_state.__setitem__", "HTTPException", "PlaybackState"], "search-terms": ["FastAPI", "playback", "media control", "track management", "audio player API", "playback state endpoint"], "state": 2, "file_id": 8, "knowledge_revision": 45, "git_revision": "9dccd2884370b9b78c66b02bda187cb9d7a42fe9", "revision_history": [{"18": ""}, {"45": "9dccd2884370b9b78c66b02bda187cb9d7a42fe9"}], "ctags": [{"_type": "tag", "name": "PlaybackState", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^class PlaybackState(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_ensure_track", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^def _ensure_track(track_id: Optional[str]):$/", "language": "Python", "kind": "function", "signature": "(track_id: Optional[str])"}, {"_type": "tag", "name": "current_track_id", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^    current_track_id: Optional[str] = Field(None, description=\"Currently selected track ID\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "PlaybackState", "scopeKind": "class"}, {"_type": "tag", "name": "get_state", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^def get_state(user: UserPublic = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(user: UserPublic = Depends(get_current_user))"}, {"_type": "tag", "name": "is_playing", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^    is_playing: bool = Field(..., description=\"Whether playback is active\")$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "PlaybackState", "scopeKind": "class"}, {"_type": "tag", "name": "pause", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^def pause(user: UserPublic = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(user: UserPublic = Depends(get_current_user))"}, {"_type": "tag", "name": "play", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^def play(track_id: Optional[str] = None, user: UserPublic = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(track_id: Optional[str] = None, user: UserPublic = Depends(get_current_user))"}, {"_type": "tag", "name": "position_ms", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^    position_ms: int = Field(0, description=\"Playback position in milliseconds\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PlaybackState", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "skip", "path": "/home/kavia/workspace/code-generation/music-video-preview-player-22936-22945/music_player_backend/src/api/routers/playback.py", "pattern": "/^def skip(track_id: str, user: UserPublic = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(track_id: str, user: UserPublic = Depends(get_current_user))"}], "hash": "f53ec2f862dea97022f8dfc0526ead67", "format-version": 4, "code-base-name": "music_player_backend", "filename": "music_player_backend/src/api/routers/playback.py", "fields": [{"name": "Optional[str] current_track_id", "scope": "PlaybackState", "scopeKind": "class", "description": "unavailable"}, {"name": "bool is_playing", "scope": "PlaybackState", "scopeKind": "class", "description": "unavailable"}, {"name": "int position_ms", "scope": "PlaybackState", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}